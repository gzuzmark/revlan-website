---
interface Props {
  href?: string;
  size?: "md" | "lg";
  block?: boolean;
  style?: "outline" | "primary" | "inverted" | "muted" | "secondary";
  class?: string;
  [x: string]: any;
}

const {
  href,
  block,
  size = "lg",
  style = "primary",
  class: className,
  ...rest
} = Astro.props;

const sizes = {
  lg: "px-5 py-2.5",
  md: "px-4 py-2",
};

const styles = {
  outline:
    "bg-white text-primary border-2 border-primary hover:bg-primary-hover hover:text-white",
  primary:
    "bg-primary text-secondary hover:bg-primary-hover  border-2 border-transparent",
  inverted: "bg-white text-black   border-2 border-transparent",
  muted: "bg-gray-100 hover:bg-gray-200   border-2 border-transparent",
  secondary:
    "bg-purple text-white hover:bg-purple-light hover:text-black border-2 border-transparent",
};

const baseClasses = [
  "rounded-md text-center text-xl transition focus-visible:ring-2 ring-offset-2 ring-gray-200",
  block && "w-full",
  sizes[size],
  styles[style],
  className,
];
---

<astro-fragment>
  {
    href ? (
      <a href={href} {...rest} class:list={baseClasses}>
        <slot />
      </a>
    ) : (
      <button {...rest} class:list={baseClasses}>
        <slot />
      </button>
    )
  }
</astro-fragment>
